'''
Esse script l√™ os dados e imagens salvos
por process_tweet_variables.py e process_tweet_images.py
e salva arquivos JSON com os fios que ser√£o publicados por tweet.py
'''

from datetime import datetime, timedelta
import json
import os


###########################
### Rename os functions ###
### for readability     ###
###########################

abspath = os.path.abspath
dirname = os.path.dirname


###############
### Globals ###
###############

PROJECT_ROOT = dirname(abspath(dirname(__file__)))


###############
### Helpers ###
###############

def read_variables(time):
    '''
    L√™ o arquivo JSON com as vari√°veis
    salvas para o per√≠odo de tempo desejado
    e retorna como um dicion√°rio do Python.

    Par√¢metros:

    > time: O intervalo de tempo desejado. Pode ser
    '24h' ou '7d'.
    '''

    with open(f"{PROJECT_ROOT}/output/jsons/alerts/{time}.json") as f:
        data = json.load(f)

    return data


##########################
### Fun√ß√µes principais ###
##########################

def build_thread_most_fire_indigenous_land(data):
    '''
    Acessa as vari√°veis criadas por find_values
    para montar a thread di√°ria sobre terras ind√≠genas
    que ser√° publicada no Twitter.
    
    O fio √© estruturado em um array do objetos com um campo
    para o texto e um para o caminho de uma eventual foto.
    '''

    # Cria timestamps para garantir unicidade

    # Cria correspond√™ncias curtas para as vari√°veis,
    # tornando o texto do fio mais f√°cil de acompanhar.



    # Campos usados para evitar repeti√ß√£o exagerada
    day = datetime.now().strftime("%d/%m/%Y")
    total_geral = data["total_focos_amazonia_legal_2020"]
    total_fogo = data["terras_indigenas"]["total_focos_24h"]


    # N√∫meros

    a = data["terras_indigenas"]["areas_com_fogo_24h"]

    b = data["terras_indigenas"]["areas_mais_fogo_24h"]["1"]["nome"]
    c = data["terras_indigenas"]["areas_mais_fogo_24h"]["1"]["n_focos"]
    d = data["terras_indigenas"]["areas_mais_fogo_24h"]["1"]["porcentagem"]
    e = data["terras_indigenas"]["areas_mais_fogo_24h"]["1"]["dias_consecutivos"]
    estados_1 = data["terras_indigenas"]["areas_mais_fogo_24h"]["1"]["estados"]

    f = data["terras_indigenas"]["areas_mais_fogo_24h"]["2"]["nome"]
    g = data["terras_indigenas"]["areas_mais_fogo_24h"]["2"]["n_focos"]
    h = data["terras_indigenas"]["areas_mais_fogo_24h"]["2"]["porcentagem"]
    estados_2 = data["terras_indigenas"]["areas_mais_fogo_24h"]["2"]["estados"]

    i = data["terras_indigenas"]["areas_mais_fogo_24h"]["3"]["nome"]
    j = data["terras_indigenas"]["areas_mais_fogo_24h"]["3"]["n_focos"]
    k = data["terras_indigenas"]["areas_mais_fogo_24h"]["3"]["porcentagem"]
    estados_3 = data["terras_indigenas"]["areas_mais_fogo_24h"]["3"]["estados"]

    
    tweets = [ ]
    
    # Abertura
    tweet = {
        "text": (f"Ol√°! Hoje, {day}, nossa an√°lise detectou {a} terras ind√≠genas da Amaz√¥nia Legal com fogo ativo nas √∫ltimas 24h. Veja mais informa√ß√µes no fio üëá"),
        "img": None
    }
    tweets.append(tweet)
    
    # Chamada para imagem retirada da API do Mapbox.
    tweet = {
        "text": (f"Este mapa mostra todos os focos de calor em terras ind√≠genas em {day}. As √°reas roxas s√£o as {a} terras ind√≠genas onde foram registrados os focos. Cada ponto representa uma √°rea de 0,14 km¬≤ em que o sat√©lite detectou  atividade de fogo."),
        "img": "../output/imgs/tweets/ti_24h_todos_os_focos.jpg"
    }
    tweets.append(tweet)
    
    # Destaca a terra ind√≠gena com mais focos de fogo nas √∫ltimas 24h.
    tweet = { "text": f"A situa√ß√£o mais cr√≠tica acontece na Terra Ind√≠gena {b} ({estados_1}), cujos {c} focos s√£o {d}% do total registrado em terras ind√≠genas nas √∫ltimas 24h. Al√©m disso, l√° existem √°reas com fogo h√° {e} dias seguidos. Veja no mapa.",
         "img": "../output/imgs/tweets/ti_24h_local_mais_focos.jpg"
    }
    tweets.append(tweet)
    
    
    tweet =  { 
                "text": (f"Ela, por√©m, n√£o √© a √∫nica que sofre. As outras duas terras com mais fogo no √∫ltimo dia foram estas:\n\n"
					f"- {f} ({estados_2}): {h}% do total, com {g} focos\n"
					f"- {i} ({estados_3}): {k}% do total, com {j} focos\n"),
                "img": None
            }
    tweets.append(tweet)
    
    
    tweet = { "text": f"Aten√ß√£o para a metodologia! üìà Nossa an√°lise usa dados do sat√©lite S-NPP, da NASA, que n√£o √© o mesmo que o INPE usa como refer√™ncia desde 2002. Cada um dos {total_fogo} focos mostrados representa uma √°rea de 0,14 km¬≤ com brilho e calor compat√≠veis com atividade de fogo.",
         "img": None
    }
    tweets.append(tweet)
    

    tweet = { "text": f"Voc√™ pode ver detalhes sobre a situa√ß√£o da Amaz√¥nia Legal na p√°gina especial do Amaz√¥nia Sufocada e navegar pelo mapa interativo com todos os {total_geral} focos de calor registrados na regi√£o em 2020. \n\nhttps://infoamazonia.org/sufocada",
         "img": None
    }
    tweets.append(tweet)
    

    # N√£o podemos aceitar nenhum tu√≠te com mais de 280 toques
    tweets_over_280_chars = [len(tweet["text"]) >= 280 for tweet in tweets]
    print([len(tweet["text"]) for tweet in tweets])
    assert not any(tweets_over_280_chars), "tu√≠tes acima do limite de caracteres detectados"

    return tweets



def build_thread_most_fire_conservation_units(data):
    '''
    Acessa as vari√°veis criadas por find_values
    para montar a thread di√°ria sobre unidades de conserva√ß√£o
    que ser√° publicada no Twitter.
    
    O fio √© estruturado em um array do objetos com um campo
    para o texto e um para o caminho de uma eventual foto.
    '''

    # Campos usados para evitar repeti√ß√£o exagerada
    day = datetime.now().strftime("%d/%m/%Y")
    total_geral = data["total_focos_amazonia_legal_2020"]
    total_fogo = data["unidades_de_conservacao"]["total_focos_24h"]

    # Cria correspond√™ncias curtas para as vari√°veis,
    # tornando o texto do fio mais f√°cil de acompanhar.

    a = data["unidades_de_conservacao"]["areas_com_fogo_24h"]

    b = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["1"]["nome"]
    c = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["1"]["n_focos"]
    d = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["1"]["porcentagem"]
    e = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["1"]["dias_consecutivos"]
    estados_1 = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["1"]["estados"]


    f = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["2"]["nome"]
    g = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["2"]["n_focos"]
    h = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["2"]["porcentagem"]
    estados_2 = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["2"]["estados"]


    i = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["3"]["nome"]
    j = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["3"]["n_focos"]
    k = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["3"]["porcentagem"]
    estados_3 = data["unidades_de_conservacao"]["areas_mais_fogo_24h"]["3"]["estados"]


    
    tweets = [ ]
    
    # Abertura
    tweet = {
        "text": (f"Oi! Nossa an√°lise descobriu que h√° {a} unidades de conserva√ß√£o na Amaz√¥nia Legal com fogo ativo no √∫ltimo dia, {day}. Mais detalhes no fio üëá"),
        "img": None
    }
    tweets.append(tweet)
    
    # Chamada para imagem retirada da API do Mapbox.
    tweet = {
        "text": (f"No mapa abaixo, as √°reas verdes s√£o unidades de conserva√ß√£o com focos de calor em {day}. Cada ponto representa 0,14 km¬≤ em que o sat√©lite detectou atividade de fogo."),
        "img": f"{PROJECT_ROOT}/output/imgs/tweets/uc_24h_todos_os_focos.jpg"
        
    } 
    tweets.append(tweet)
    
    # Destaca a terra ind√≠gena com mais focos de fogo nas √∫ltimas 24h.
    tweet = { "text": f"Nas √∫ltimas 24h, a maior quantidade de focos aconteceu na unidade {b} ({estados_1}), que teve {c} pontos de fogo ({d}% do total). Essa √°rea est√° queimando h√° {e} dias. Veja no mapa:",

         "img": f"{PROJECT_ROOT}/output/imgs/tweets/uc_24h_local_mais_focos.jpg"

    }
    tweets.append(tweet)
    
    
    tweet =  { 
                "text": (f"As outras duas unidades de conserva√ß√£o com mais fogo no √∫ltimos dia foram estas:\n\n"
                    f"- {f} ({estados_2}): {h}% do total, com {g} focos\n"
                    f"- {i} ({estados_3}): {k}% do total, com {j} focos\n"),

                "img": None
              
            }
    tweets.append(tweet)
    
    
    tweet = { "text": f"Aten√ß√£o para a metodologia! üìà A an√°lise usa dados do sat√©lite S-NPP, da NASA, que tem mais resolu√ß√£o que a refer√™ncia utilizada pelo Inpe e capta maior n√∫mero de focos. Cada um dos {total_fogo} focos representa uma √°rea de 0,14 km¬≤ que pode conter v√°rias ou uma √∫nica frente de fogo.",
         "img": None
    }
    tweets.append(tweet)
    

    tweet = { "text": f"Voc√™ pode ver mais detalhes sobre a situa√ß√£o da Amaz√¥nia Legal na p√°gina especial Amaz√¥nia Sufocada e navegar pelo mapa interativo com todos os {total_geral} focos de calor registrados na regi√£o em 2020. \n\nhttps://infoamazonia.org/sufocada",
         "img": None
    }
    tweets.append(tweet)


    # N√£o podemos aceitar nenhum tu√≠te com mais de 280 toques
    tweets_over_280_chars = [len(tweet["text"]) >= 280 for tweet in tweets]
    print([len(tweet["text"]) for tweet in tweets])
    assert not any(tweets_over_280_chars), "tu√≠tes acima do limite de caracteres detectados"
    
    return tweets


def build_thread_7d_grid(data):
    '''
    Acessa as vari√°veis criadas por find_values
    para montar a thread semanal com base nos grids de
    20 km quadrados que ser√° publicada no Twitter.
    
    O fio √© estruturado em um array do objetos com um campo
    para o texto e um para o caminho de uma eventual foto.
    '''

    # Defini√ß√£o de vari√°veis

    # Datas
    today = datetime.now()
    last_week_date = today - timedelta(days=7) # O c√°lculo √© sempre para sete dias antes, ent√£o
                                               # o texto dos tweets s√≥ estar√° correto na data
                                               # de publica√ß√£o, que acontece nas segundas-feiras,
                                               # mas com dados de domingo.


    # Formato DD/MM/YY
    today = today.strftime("%d/%m/%Y")
    last_week_date = last_week_date.strftime("%d/%m/%Y")

    # Gerais

    total_geral = data["total_focos_amazonia_legal_2020"]
    total_semana = data["total_focos_7d"]
    total_focos_7d_uc = data["total_focos_7d_uc"]
    total_focos_7d_uc_pp = round(total_focos_7d_uc / total_semana * 100)
    total_focos_7d_ti = data["total_focos_7d_ti"] 
    total_focos_7d_ti_pp = round(total_focos_7d_ti / total_semana * 100)



    # Destaque 1
    grid_1_n_focos = data["grid"]["areas_mais_fogo_7d"]["1"]["n_focos"]
    grid_1_dias_consecutivos = data["grid"]["areas_mais_fogo_7d"]["1"]["dias_consecutivos"]
    grid_1_cidade = data["grid"]["areas_mais_fogo_7d"]["1"]["cidade"]
    grid_1_estado = data["grid"]["areas_mais_fogo_7d"]["1"]["estado"]
    grid_1_bioma = data["grid"]["areas_mais_fogo_7d"]["1"]["nome_bioma"]
    grid_1_ti = data["grid"]["areas_mais_fogo_7d"]["1"]["nome_ti"]
    grid_1_uc = data["grid"]["areas_mais_fogo_7d"]["1"]["nome_uc_curto"]


    # Destaque 2
    grid_2_n_focos = data["grid"]["areas_mais_fogo_7d"]["2"]["n_focos"]
    grid_2_dias_consecutivos = data["grid"]["areas_mais_fogo_7d"]["2"]["dias_consecutivos"]
    grid_2_cidade = data["grid"]["areas_mais_fogo_7d"]["2"]["cidade"]
    grid_2_estado = data["grid"]["areas_mais_fogo_7d"]["2"]["estado"]
    grid_2_bioma = data["grid"]["areas_mais_fogo_7d"]["2"]["nome_bioma"]
    grid_2_ti = data["grid"]["areas_mais_fogo_7d"]["2"]["nome_ti"]
    grid_2_uc = data["grid"]["areas_mais_fogo_7d"]["2"]["nome_uc_curto"]


    # Destaque 3
    grid_3_n_focos = data["grid"]["areas_mais_fogo_7d"]["3"]["n_focos"]
    grid_3_dias_consecutivos = data["grid"]["areas_mais_fogo_7d"]["3"]["dias_consecutivos"]
    grid_3_cidade = data["grid"]["areas_mais_fogo_7d"]["3"]["cidade"]
    grid_3_estado = data["grid"]["areas_mais_fogo_7d"]["3"]["estado"]
    grid_3_bioma = data["grid"]["areas_mais_fogo_7d"]["3"]["nome_bioma"]
    grid_3_ti = data["grid"]["areas_mais_fogo_7d"]["3"]["nome_ti"]
    grid_3_uc = data["grid"]["areas_mais_fogo_7d"]["3"]["nome_uc_curto"]


    # Conte√∫do do fio
    tweets = [ ]
    
    # Abre
    tweet = {
        "text": (f"Ol√°! Chegou o dia do nosso relat√≥rio semanal, em que falamos sobre as regi√µes da Amaz√¥nia Legal que mais tiveram focos de calor na semana passada, entre o domingo de {last_week_date} e ontem. Acompanhe no fio üëá"),
        "img": None
    }
    tweets.append(tweet)

    # Quantas est√£o em regi√µes protegidas?
    tweet = {
        "text": (f"De todos os focos de fogo registrados nos √∫ltimos sete dias, {total_focos_7d_ti_pp}% aconteceram dentro de terras ind√≠genas e {total_focos_7d_uc_pp}% aconteceram em unidades de conserva√ß√£o."),
        "img": None
    }
    tweets.append(tweet)


    # Destaque das √°reas
    tweet = {
        "text": (f"No mapa abaixo, cada quadrado representa uma regi√£o de 400km¬≤ com ao menos um foco de calor registrado na semana. Quanto mais roxo ele estiver, mais focos de calor aconteceram l√° dentro."),
        "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_todas_as_areas.jpg"
    }
    tweets.append(tweet)


    # √Årea de destaque 1
    if not grid_1_ti and not grid_1_uc:
        tweet = {
            "text": (f"A regi√£o com mais fogo est√° em destaque no mapa, com focos de calor em amarelo. Ela fica nos arredores de {grid_1_cidade}, {grid_1_estado}, e faz parte do bioma {grid_1_bioma}. Essa √°rea est√° queimando h√° {grid_1_dias_consecutivos} dias consecutivos."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_1.jpg"
        }
        tweets.append(tweet)

    elif grid_1_ti and not grid_1_uc:
        tweet = {
            "text": (f"A regi√£o com mais fogo est√° em destaque no mapa, com focos de calor em amarelo. Ela fica nos arredores de {grid_1_cidade}, {grid_1_estado}. Essa √°rea est√° queimando h√° {grid_1_dias_consecutivos} dias consecutivos. Ao menos parte dela est√° na terra ind√≠gena {grid_1_ti}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_1.jpg"
        }
        tweets.append(tweet)

    elif not grid_1_ti and grid_1_uc:
        tweet = {
            "text": (f"Veja no mapa a regi√£o com mais fogo, nos arredores de {grid_1_cidade}, {grid_1_estado}. Essa √°rea est√° queimando h√° {grid_1_dias_consecutivos} dias consecutivos. Ao menos parte dela est√° na unidade de conserva√ß√£o {grid_1_uc}. Pontos amarelos representam focos de calor."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_1.jpg"
        }
        tweets.append(tweet)

    elif grid_1_ti and grid_1_uc:
        tweet = {
            "text": (f"Veja no mapa a regi√£o com mais fogo, perto de {grid_1_cidade}, {grid_1_estado}. Essa √°rea queima h√° {grid_1_dias_consecutivos} dias consecutivos. Ao menos parte dela est√° na unidade de conserva√ß√£o {grid_1_uc} e na terra ind√≠gena {grid_1_ti}. Pontos amarelos s√£o focos de calor."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_1.jpg"
        }
        tweets.append(tweet)


    # √Årea de destaque 2
    if not grid_2_ti and not grid_2_uc:
        tweet = {
            "text": (f"Outras √°reas tamb√©m est√£o em situa√ß√£o cr√≠tica. A 2¬™ regi√£o que mais queima fica no munic√≠pio de {grid_2_cidade}, {grid_2_estado}, e faz parte do bioma {grid_2_bioma}. Essa √°rea est√° queimando h√° {grid_2_dias_consecutivos} dias consecutivos."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_2.jpg"
        }
        tweets.append(tweet)

    elif grid_2_ti and not grid_2_uc:
        tweet = {
            "text": (f"Outras √°reas tamb√©m est√£o em situa√ß√£o cr√≠tica. A 2¬™ regi√£o que mais queima fica no munic√≠pio de {grid_2_cidade}, {grid_2_estado}. Essa √°rea est√° queimando h√° {grid_2_dias_consecutivos} dias consecutivos. Ao menos parte dela fica na terra ind√≠gena {grid_2_ti}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_2.jpg"
        }
        tweets.append(tweet)

    elif not grid_2_ti and grid_2_uc:
        tweet = {
            "text": (f"Outras √°reas tamb√©m est√£o em situa√ß√£o cr√≠tica. A 2¬™ regi√£o que mais queima fica no munic√≠pio de {grid_2_cidade}, {grid_2_estado}. Essa √°rea est√° queimando h√° {grid_2_dias_consecutivos} dias consecutivos. Ao menos parte dela fica na unidade de conserva√ß√£o {grid_2_uc}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_2.jpg"
        }
        tweets.append(tweet)

    elif grid_2_ti and grid_2_uc:
        tweet = {
            "text": (f"Outras √°reas tamb√©m est√£o em situa√ß√£o cr√≠tica. A 2¬™ √°rea que mais queima est√° no munic√≠pio de {grid_2_cidade}, {grid_2_estado}. Essa √°rea queima h√° {grid_2_dias_consecutivos} dias consecutivos. Partes dela ficam na undidade de conserva√ß√£o {grid_2_uc} e na terra ind√≠gena {grid_2_ti}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_2.jpg"
        }
        tweets.append(tweet)


    # √Årea de queimada 3
    if not grid_3_ti and not grid_3_uc:
        tweet = {
            "text": (f"Por fim, a 3¬™ √°rea com mais focos de calor fica em {grid_3_cidade}, {grid_3_estado} e faz parte do bioma {grid_3_bioma}. H√° registro de fogo na regi√£o faz {grid_3_dias_consecutivos} dias seguidos."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_3.jpg"
        }
        tweets.append(tweet)

    elif grid_3_ti and not grid_3_uc:
        tweet = {
            "text": (f"Por fim, a 3¬™ √°rea com mais focos de calor fica em {grid_3_cidade}, {grid_3_estado}. H√° registro de fogo na regi√£o faz {grid_3_dias_consecutivos} dias seguidos. Ao menos parte dessa √°rea fica na terra ind√≠gena {grid_3_ti}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_3.jpg"
        }
        tweets.append(tweet)

    elif not grid_3_ti and grid_3_uc:
        tweet = {
            "text": (f"Por fim, a 3¬™ √°rea que mais queima fica em {grid_3_cidade}, {grid_3_estado}. H√° registro de fogo na regi√£o faz {grid_3_dias_consecutivos} dias seguidos. Ao menos parte dessa √°rea est√° na unidade de conserva√ß√£o {grid_3_uc}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_3.jpg"
        }
        tweets.append(tweet)

    elif grid_3_ti and grid_3_uc:
        tweet = {
            "text": (f"Por fim, a 3¬™ √°rea que mais queima est√° no munic√≠pio de {grid_3_cidade}, {grid_3_estado}. Essa √°rea queima h√° {grid_3_dias_consecutivos} dias consecutivos. Partes dela ficam na unidade de conserva√ß√£o {grid_3_uc} e na terra ind√≠gena {grid_3_ti}."),
            "img": f"{PROJECT_ROOT}/output/imgs/tweets/grid_7d_mais_fogo_3.jpg"
        }
        tweets.append(tweet)


    # Metodologia
    tweet = {
            "text": (f"Para identificar as √°reas listadas, dividimos o territ√≥rio da Amaz√¥nia Legal em uma grade de quadrados de cerca de 20km de lado. As √°reas com mais fogo s√£o aquelas que tiveram mais focos de calor detctados pelo sat√©lite S-NPP, da NASA, entre ontem e o domingo anterior, {last_week_date}."),
            "img": None
        }
    tweets.append(tweet)

    tweet = {
            "text": (f"Esse sat√©lite n√£o √© o mesmo que o INPE usa como refer√™ncia desde 2002. Cada um dos {total_semana} focos registrados nessa semana representa uma √°rea de 0,14km¬≤ com brilho e calor compat√≠veis com atividade de fogo."),
            "img": None
        }
    tweets.append(tweet)


    # Link out
    tweet = {
            "text": (f"Voc√™ pode ver mais detalhes na p√°gina especial do Amaz√¥nia Sufocada e navegar pelo mapa interativo com todos os {total_geral} focos de calor registrados na regi√£o em 2020.\n\nhttps://infoamazonia.org/sufocada"),
            "img": None
        }
    tweets.append(tweet)



    # Checagem de tamanho
    tweets_over_280_chars = [len(tweet["text"]) >= 280 for tweet in tweets]
    print([len(tweet["text"]) for tweet in tweets])
    assert not any(tweets_over_280_chars), "tu√≠tes acima do limite de caracteres detectados"
    
    return tweets

################
### Execu√ß√£o ###
################

def main():


    # Verifica se o diret√≥rio de tweets de fato existe
    directory = f"{PROJECT_ROOT}/output/jsons/tweets/"
    if not os.path.exists(directory):
        os.makedirs(directory)

    # L√™ os dados das vari√°veis de 24h
    data_24h = read_variables("24h")

    # Terras ind√≠genas, 24h
    with open(f"{PROJECT_ROOT}/output/jsons/tweets/tis_24h.json", "w+") as f:
        content = build_thread_most_fire_indigenous_land(data_24h)
        json.dump(content, f, indent=2)

    # Unidades de conserva√ß√£o, 24h
    with open(f"{PROJECT_ROOT}/output/jsons/tweets/ucs_24h.json", "w+") as f:
        content = build_thread_most_fire_conservation_units(data_24h)
        json.dump(content, f, indent=2)


    # L√™ os dados das vari√°veis de 7 dias
    data_7d = read_variables("7d")
    with open(f"{PROJECT_ROOT}/output/jsons/tweets/grid_7d.json", "w+") as f:
        content = build_thread_7d_grid(data_7d)
        json.dump(content, f, indent=2)

if __name__ == "__main__":
	main()
